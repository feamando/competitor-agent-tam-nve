window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":8,"numPassedTestSuites":1,"numPassedTests":33,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":2,"numTotalTests":41,"startTime":1749675991589,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":24,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1749675995149,"runtime":3227,"slow":false,"start":1749675991922},"testFilePath":"/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/chat/productChatProcessor.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Product Name Collection"],"duration":3,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Product Name Collection should collect product name when none exists","status":"passed","title":"should collect product name when none exists"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Product Name Collection"],"duration":1,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Product Name Collection should handle empty product name","status":"passed","title":"should handle empty product name"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Product Name Collection"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Product Name Collection should handle product name with quotes","status":"passed","title":"should handle product name with quotes"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Product Name Collection"],"duration":1,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Product Name Collection should reject extremely long product names","status":"passed","title":"should reject extremely long product names"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Product URL Collection"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Product URL Collection should collect valid URL with https","status":"passed","title":"should collect valid URL with https"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Product URL Collection"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Product URL Collection should collect valid URL without protocol and add https","status":"passed","title":"should collect valid URL without protocol and add https"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Product URL Collection"],"duration":1,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Product URL Collection should handle URL with http protocol","status":"passed","title":"should handle URL with http protocol"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Product URL Collection"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Product URL Collection should reject invalid URLs","status":"passed","title":"should reject invalid URLs"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Product URL Collection"],"duration":1,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Product URL Collection should reject URLs with invalid protocols","status":"passed","title":"should reject URLs with invalid protocols"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Positioning Collection"],"duration":1,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Positioning Collection should collect positioning information","status":"passed","title":"should collect positioning information"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Positioning Collection"],"duration":6,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Positioning Collection should trim whitespace from positioning","status":"passed","title":"should trim whitespace from positioning"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Customer Data Collection"],"duration":1,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Customer Data Collection should collect customer data","status":"passed","title":"should collect customer data"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","User Problem Collection"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData User Problem Collection should collect user problems","status":"passed","title":"should collect user problems"},{"ancestorTitles":["EnhancedProductChatProcessor","collectProductData","Industry Collection"],"duration":1,"failureMessages":[],"fullName":"EnhancedProductChatProcessor collectProductData Industry Collection should collect industry and complete the flow","status":"passed","title":"should collect industry and complete the flow"},{"ancestorTitles":["EnhancedProductChatProcessor","validateProductData"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor validateProductData should return false for empty chat state","status":"passed","title":"should return false for empty chat state"},{"ancestorTitles":["EnhancedProductChatProcessor","validateProductData"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor validateProductData should return false for incomplete data","status":"passed","title":"should return false for incomplete data"},{"ancestorTitles":["EnhancedProductChatProcessor","validateProductData"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor validateProductData should return true for complete data","status":"passed","title":"should return true for complete data"},{"ancestorTitles":["EnhancedProductChatProcessor","getNextProductStep"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor getNextProductStep should return step 1 for no collected data","status":"passed","title":"should return step 1 for no collected data"},{"ancestorTitles":["EnhancedProductChatProcessor","getNextProductStep"],"duration":1,"failureMessages":[],"fullName":"EnhancedProductChatProcessor getNextProductStep should return correct step numbers for partial data","status":"passed","title":"should return correct step numbers for partial data"},{"ancestorTitles":["EnhancedProductChatProcessor","getNextProductStep"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor getNextProductStep should return null for complete data","status":"passed","title":"should return null for complete data"},{"ancestorTitles":["EnhancedProductChatProcessor","URL parsing edge cases"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor URL parsing edge cases should handle URLs with paths and parameters","status":"passed","title":"should handle URLs with paths and parameters"},{"ancestorTitles":["EnhancedProductChatProcessor","URL parsing edge cases"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor URL parsing edge cases should handle URLs with ports","status":"passed","title":"should handle URLs with ports"},{"ancestorTitles":["EnhancedProductChatProcessor","URL parsing edge cases"],"duration":0,"failureMessages":[],"fullName":"EnhancedProductChatProcessor URL parsing edge cases should reject URLs with very short hostnames","status":"passed","title":"should reject URLs with very short hostnames"},{"ancestorTitles":["EnhancedProductChatProcessor","Integration flow test"],"duration":1,"failureMessages":[],"fullName":"EnhancedProductChatProcessor Integration flow test should complete full product data collection flow","status":"passed","title":"should complete full product data collection flow"}]},{"numFailingTests":8,"numPassingTests":9,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1749675997166,"runtime":5258,"slow":true,"start":1749675991908},"testFilePath":"/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mEnhancedProjectExtractor › Structured Input (Backward Compatible) › should extract basic project information from structured input\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 2\u001b[39m\n    \u001b[31m+ Received  + 2\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[2m    \"customerData\": undefined,\u001b[22m\n    \u001b[2m    \"frequency\": \"Weekly\",\u001b[22m\n    \u001b[32m-   \"industry\": \"Food Delivery\",\u001b[39m\n    \u001b[31m+   \"industry\": \"food delivery\",\u001b[39m\n    \u001b[2m    \"positioning\": undefined,\u001b[22m\n    \u001b[2m    \"productName\": \"Good Chop\",\u001b[22m\n    \u001b[32m-   \"productWebsite\": \"https://goodchop.com\",\u001b[39m\n    \u001b[31m+   \"productWebsite\": \"https://goodchop.com/\",\u001b[39m\n    \u001b[2m    \"projectName\": \"Good Chop Analysis\",\u001b[22m\n    \u001b[2m    \"userEmail\": \"user@company.com\",\u001b[22m\n    \u001b[2m    \"userProblem\": undefined,\u001b[22m\n    \u001b[2m  }\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 16 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 18 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m         userEmail\u001b[33m:\u001b[39m \u001b[32m'user@company.com'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 20 |\u001b[39m         frequency\u001b[33m:\u001b[39m \u001b[32m'Weekly'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m         projectName\u001b[33m:\u001b[39m \u001b[32m'Good Chop Analysis'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:18:27)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mEnhancedProjectExtractor › Unstructured Input (Intelligent Parsing) › should extract information from natural language input\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"MyStartup Tool\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 101 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mprojectName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Startup Competitive Analysis'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 102 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mproductWebsite)\u001b[33m.\u001b[39mtoBe(\u001b[32m'https://mystartup.com/'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 103 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mproductName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'MyStartup Tool'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 104 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 105 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 106 |\u001b[39m     it(\u001b[32m'should handle mixed format input'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:103:40)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mEnhancedProjectExtractor › Unstructured Input (Intelligent Parsing) › should handle mixed format input\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"Food Delivery Analysis\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7mProject name: \u001b[27mFood Delivery Analysis\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 118 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39muserEmail)\u001b[33m.\u001b[39mtoBe(\u001b[32m'sarah@foodtech.com'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 119 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mfrequency)\u001b[33m.\u001b[39mtoBe(\u001b[32m'monthly'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 120 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mprojectName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Food Delivery Analysis'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 121 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mproductWebsite)\u001b[33m.\u001b[39mtoBe(\u001b[32m'https://fooddelivery.app/'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 122 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mindustry)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Food Technology'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 123 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:120:40)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mEnhancedProjectExtractor › Unstructured Input (Intelligent Parsing) › should fail gracefully with missing required information\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\n    Expected value: \u001b[32m\"Email address not found in message\"\u001b[39m\n    Received array: \u001b[31m[\"Invalid email address format in first line\", \"Invalid frequency in second line\", \"Project name too short or missing in third line\"]\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 131 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 132 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 133 |\u001b[39m       expect(result\u001b[33m.\u001b[39merrors)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Email address not found in message'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 134 |\u001b[39m       expect(result\u001b[33m.\u001b[39merrors)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Report frequency not specified'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 135 |\u001b[39m       expect(result\u001b[33m.\u001b[39merrors)\u001b[33m.\u001b[39mtoContain(\u001b[32m'Project name not identified'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 136 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:133:29)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mEnhancedProjectExtractor › URL Validation › should validate and clean URLs correctly\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"https://example.com/\"\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 158 |\u001b[39m         \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m enhancedProjectExtractor\u001b[33m.\u001b[39mextractProjectData(message)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 159 |\u001b[39m         expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 160 |\u001b[39m         expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mproductWebsite)\u001b[33m.\u001b[39mtoBe(expected)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 161 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 162 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 163 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:160:45\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.forEach (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:150:17)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mEnhancedProjectExtractor › Product Name Extraction › should extract product name from project name patterns\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"Spotify\"\u001b[39m\n    Received: \u001b[31m\"Spotify\u001b[7m vs\u001b[27m\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 272 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 273 |\u001b[39m         \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m enhancedProjectExtractor\u001b[33m.\u001b[39mextractProjectData(message)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 274 |\u001b[39m         expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mproductName)\u001b[33m.\u001b[39mtoBe(expected)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 275 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 276 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 277 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:274:42\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.forEach (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:266:17)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mEnhancedProjectExtractor › Product Name Extraction › should prioritize explicit product declarations\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"Specific Product Name\"\u001b[39m\n    Received: \u001b[31m\"Generic\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 285 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 286 |\u001b[39m       \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m enhancedProjectExtractor\u001b[33m.\u001b[39mextractProjectData(message)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 287 |\u001b[39m       expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mproductName)\u001b[33m.\u001b[39mtoBe(\u001b[32m'Specific Product Name'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 288 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 289 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 290 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:287:40)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mEnhancedProjectExtractor › Industry Detection › should detect industry from various patterns\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m\"\u001b[7mF\u001b[27mood \u001b[7mT\u001b[27mechnology\"\u001b[39m\n    Received: \u001b[31m\"\u001b[7mf\u001b[27mood \u001b[7mt\u001b[27mechnology\"\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 306 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 307 |\u001b[39m         \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m enhancedProjectExtractor\u001b[33m.\u001b[39mextractProjectData(message)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 308 |\u001b[39m         expect(result\u001b[33m.\u001b[39mdata\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mindustry)\u001b[33m.\u001b[39mtoBe(expected)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 309 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 310 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 311 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat \u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:308:39\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m          at Array.forEach (<anonymous>)\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts\u001b[39m\u001b[0m\u001b[2m:299:17)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["EnhancedProjectExtractor","Structured Input (Backward Compatible)"],"duration":7,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 2\u001b[39m\n\u001b[31m+ Received  + 2\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[2m    \"customerData\": undefined,\u001b[22m\n\u001b[2m    \"frequency\": \"Weekly\",\u001b[22m\n\u001b[32m-   \"industry\": \"Food Delivery\",\u001b[39m\n\u001b[31m+   \"industry\": \"food delivery\",\u001b[39m\n\u001b[2m    \"positioning\": undefined,\u001b[22m\n\u001b[2m    \"productName\": \"Good Chop\",\u001b[22m\n\u001b[32m-   \"productWebsite\": \"https://goodchop.com\",\u001b[39m\n\u001b[31m+   \"productWebsite\": \"https://goodchop.com/\",\u001b[39m\n\u001b[2m    \"projectName\": \"Good Chop Analysis\",\u001b[22m\n\u001b[2m    \"userEmail\": \"user@company.com\",\u001b[22m\n\u001b[2m    \"userProblem\": undefined,\u001b[22m\n\u001b[2m  }\u001b[22m\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:18:27)\n    at Promise.then.completed (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"EnhancedProjectExtractor Structured Input (Backward Compatible) should extract basic project information from structured input","status":"failed","title":"should extract basic project information from structured input"},{"ancestorTitles":["EnhancedProjectExtractor","Structured Input (Backward Compatible)"],"duration":1,"failureMessages":[],"fullName":"EnhancedProjectExtractor Structured Input (Backward Compatible) should handle missing product website gracefully","status":"passed","title":"should handle missing product website gracefully"},{"ancestorTitles":["EnhancedProjectExtractor","Structured Input (Backward Compatible)"],"duration":1,"failureMessages":[],"fullName":"EnhancedProjectExtractor Structured Input (Backward Compatible) should fail with insufficient information","status":"passed","title":"should fail with insufficient information"},{"ancestorTitles":["EnhancedProjectExtractor","Structured Input (Backward Compatible)"],"duration":1,"failureMessages":[],"fullName":"EnhancedProjectExtractor Structured Input (Backward Compatible) should validate email format","status":"passed","title":"should validate email format"},{"ancestorTitles":["EnhancedProjectExtractor","Structured Input (Backward Compatible)"],"duration":0,"failureMessages":[],"fullName":"EnhancedProjectExtractor Structured Input (Backward Compatible) should validate frequency format","status":"passed","title":"should validate frequency format"},{"ancestorTitles":["EnhancedProjectExtractor","Unstructured Input (Intelligent Parsing)"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"MyStartup Tool\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:103:40)\n    at Promise.then.completed (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"EnhancedProjectExtractor Unstructured Input (Intelligent Parsing) should extract information from natural language input","status":"failed","title":"should extract information from natural language input"},{"ancestorTitles":["EnhancedProjectExtractor","Unstructured Input (Intelligent Parsing)"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Food Delivery Analysis\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mProject name: \u001b[27mFood Delivery Analysis\"\u001b[39m\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:120:40)\n    at Promise.then.completed (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"EnhancedProjectExtractor Unstructured Input (Intelligent Parsing) should handle mixed format input","status":"failed","title":"should handle mixed format input"},{"ancestorTitles":["EnhancedProjectExtractor","Unstructured Input (Intelligent Parsing)"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected value: \u001b[32m\"Email address not found in message\"\u001b[39m\nReceived array: \u001b[31m[\"Invalid email address format in first line\", \"Invalid frequency in second line\", \"Project name too short or missing in third line\"]\u001b[39m\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:133:29)\n    at Promise.then.completed (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"EnhancedProjectExtractor Unstructured Input (Intelligent Parsing) should fail gracefully with missing required information","status":"failed","title":"should fail gracefully with missing required information"},{"ancestorTitles":["EnhancedProjectExtractor","URL Validation"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"https://example.com/\"\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at /Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:160:45\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:150:17)\n    at Promise.then.completed (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"EnhancedProjectExtractor URL Validation should validate and clean URLs correctly","status":"failed","title":"should validate and clean URLs correctly"},{"ancestorTitles":["EnhancedProjectExtractor","URL Validation"],"duration":0,"failureMessages":[],"fullName":"EnhancedProjectExtractor URL Validation should reject invalid URLs","status":"passed","title":"should reject invalid URLs"},{"ancestorTitles":["EnhancedProjectExtractor","Error Messages"],"duration":1,"failureMessages":[],"fullName":"EnhancedProjectExtractor Error Messages should create actionable error messages","status":"passed","title":"should create actionable error messages"},{"ancestorTitles":["EnhancedProjectExtractor","Error Messages"],"duration":0,"failureMessages":[],"fullName":"EnhancedProjectExtractor Error Messages should return empty string for successful extractions","status":"passed","title":"should return empty string for successful extractions"},{"ancestorTitles":["EnhancedProjectExtractor","Confirmation Messages"],"duration":1,"failureMessages":[],"fullName":"EnhancedProjectExtractor Confirmation Messages should create comprehensive confirmation messages","status":"passed","title":"should create comprehensive confirmation messages"},{"ancestorTitles":["EnhancedProjectExtractor","Confirmation Messages"],"duration":0,"failureMessages":[],"fullName":"EnhancedProjectExtractor Confirmation Messages should include suggestions when provided","status":"passed","title":"should include suggestions when provided"},{"ancestorTitles":["EnhancedProjectExtractor","Product Name Extraction"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Spotify\"\u001b[39m\nReceived: \u001b[31m\"Spotify\u001b[7m vs\u001b[27m\"\u001b[39m\n    at /Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:274:42\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:266:17)\n    at Promise.then.completed (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"EnhancedProjectExtractor Product Name Extraction should extract product name from project name patterns","status":"failed","title":"should extract product name from project name patterns"},{"ancestorTitles":["EnhancedProjectExtractor","Product Name Extraction"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"Specific Product Name\"\u001b[39m\nReceived: \u001b[31m\"Generic\"\u001b[39m\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:287:40)\n    at Promise.then.completed (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"EnhancedProjectExtractor Product Name Extraction should prioritize explicit product declarations","status":"failed","title":"should prioritize explicit product declarations"},{"ancestorTitles":["EnhancedProjectExtractor","Industry Detection"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"\u001b[7mF\u001b[27mood \u001b[7mT\u001b[27mechnology\"\u001b[39m\nReceived: \u001b[31m\"\u001b[7mf\u001b[27mood \u001b[7mt\u001b[27mechnology\"\u001b[39m\n    at /Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:308:39\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/unit/lib/chat/enhancedProjectExtractor.test.ts:299:17)\n    at Promise.then.completed (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"EnhancedProjectExtractor Industry Detection should detect industry from various patterns","status":"failed","title":"should detect industry from various patterns"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.{ts,tsx}","!src/**/*.d.ts","!src/**/*.stories.{ts,tsx}","!src/types/**/*","!src/__tests__/**/*","!src/**/index.ts"],"coverageDirectory":"/Users/nikita.gorshkov/competitor-research-agent/coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html","json-summary"],"coverageThreshold":{"global":{"branches":70,"functions":70,"lines":70,"statements":70},"./src/lib/":{"branches":80,"functions":80,"lines":80,"statements":80},"./src/services/":{"branches":75,"functions":75,"lines":75,"statements":75}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"globalSetup":"/Users/nikita.gorshkov/competitor-research-agent/jest.global-setup.js","globalTeardown":"/Users/nikita.gorshkov/competitor-research-agent/jest.global-teardown.js","json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[{"displayName":"unit","testEnvironment":"node","testMatch":["<rootDir>/src/__tests__/unit/**/*.test.ts"],"setupFilesAfterEnv":["<rootDir>/jest.setup.js"],"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@/lib/(.*)$":"<rootDir>/src/lib/$1","^@/components/(.*)$":"<rootDir>/src/components/$1","^@/types/(.*)$":"<rootDir>/src/types/$1","^@/services/(.*)$":"<rootDir>/src/services/$1","^@/utils/(.*)$":"<rootDir>/src/utils/$1"},"transform":{"^.+\\.tsx?$":["ts-jest",{"tsconfig":"tsconfig.jest.json"}]},"rootDir":"/Users/nikita.gorshkov/competitor-research-agent"},{"displayName":"integration","testEnvironment":"node","testMatch":["<rootDir>/src/__tests__/integration/**/*.test.ts"],"setupFilesAfterEnv":["<rootDir>/jest.setup.js"],"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@/lib/(.*)$":"<rootDir>/src/lib/$1","^@/components/(.*)$":"<rootDir>/src/components/$1","^@/types/(.*)$":"<rootDir>/src/types/$1","^@/services/(.*)$":"<rootDir>/src/services/$1","^@/utils/(.*)$":"<rootDir>/src/utils/$1"},"transform":{"^.+\\.tsx?$":["ts-jest",{"tsconfig":"tsconfig.jest.json"}]},"rootDir":"/Users/nikita.gorshkov/competitor-research-agent"},{"displayName":"component","testEnvironment":"jsdom","testMatch":["<rootDir>/src/__tests__/components/**/*.test.tsx"],"setupFilesAfterEnv":["<rootDir>/jest.setup.js"],"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@/lib/(.*)$":"<rootDir>/src/lib/$1","^@/components/(.*)$":"<rootDir>/src/components/$1","^@/types/(.*)$":"<rootDir>/src/types/$1","^@/services/(.*)$":"<rootDir>/src/services/$1","^@/utils/(.*)$":"<rootDir>/src/utils/$1"},"transform":{"^.+\\.tsx?$":["ts-jest",{"tsconfig":"tsconfig.jest.json"}]},"rootDir":"/Users/nikita.gorshkov/competitor-research-agent"},{"displayName":"e2e","testEnvironment":"node","testMatch":["<rootDir>/src/__tests__/e2e/**/*.test.ts"],"setupFilesAfterEnv":["<rootDir>/jest.setup.js"],"testTimeout":300000,"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@/lib/(.*)$":"<rootDir>/src/lib/$1","^@/components/(.*)$":"<rootDir>/src/components/$1","^@/types/(.*)$":"<rootDir>/src/types/$1","^@/services/(.*)$":"<rootDir>/src/services/$1","^@/utils/(.*)$":"<rootDir>/src/utils/$1"},"transform":{"^.+\\.tsx?$":["ts-jest",{"tsconfig":"tsconfig.jest.json"}]},"rootDir":"/Users/nikita.gorshkov/competitor-research-agent"},{"displayName":"performance","testEnvironment":"node","testMatch":["<rootDir>/src/__tests__/performance/**/*.test.ts"],"setupFilesAfterEnv":["<rootDir>/jest.setup.js"],"testTimeout":600000,"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@/lib/(.*)$":"<rootDir>/src/lib/$1","^@/components/(.*)$":"<rootDir>/src/components/$1","^@/types/(.*)$":"<rootDir>/src/types/$1","^@/services/(.*)$":"<rootDir>/src/services/$1","^@/utils/(.*)$":"<rootDir>/src/utils/$1"},"transform":{"^.+\\.tsx?$":["ts-jest",{"tsconfig":"tsconfig.jest.json"}]},"rootDir":"/Users/nikita.gorshkov/competitor-research-agent"},{"displayName":"regression","testEnvironment":"node","testMatch":["<rootDir>/src/__tests__/regression/**/*.test.ts"],"setupFilesAfterEnv":["<rootDir>/jest.setup.js"],"testTimeout":60000,"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@/lib/(.*)$":"<rootDir>/src/lib/$1","^@/components/(.*)$":"<rootDir>/src/components/$1","^@/types/(.*)$":"<rootDir>/src/types/$1","^@/services/(.*)$":"<rootDir>/src/services/$1","^@/utils/(.*)$":"<rootDir>/src/utils/$1"},"transform":{"^.+\\.tsx?$":["ts-jest",{"tsconfig":"tsconfig.jest.json"}]},"rootDir":"/Users/nikita.gorshkov/competitor-research-agent"}],"reporters":[["default",{}],["/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-html-reporters/index.js",{"publicPath":"./test-reports","filename":"regression-test-report.html","openReport":false}],["/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-junit/index.js",{"outputDirectory":"./test-reports","outputName":"junit.xml"}]],"rootDir":"/Users/nikita.gorshkov/competitor-research-agent","runTestsByPath":false,"seed":635611041,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"chat","testSequencer":"/Users/nikita.gorshkov/competitor-research-agent/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1749675997227,"_reporterOptions":{"publicPath":"./test-reports","filename":"regression-test-report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})