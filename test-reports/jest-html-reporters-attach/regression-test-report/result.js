window.jest_html_reporters_callback__({"numFailedTestSuites":1,"numFailedTests":4,"numPassedTestSuites":0,"numPassedTests":1,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":5,"startTime":1749149789445,"success":false,"testResults":[{"numFailingTests":4,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1749149793109,"runtime":3642,"slow":false,"start":1749149789467},"testFilePath":"/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/integration/reports.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m/api/reports › POST /api/reports › should return 401 if not authenticated\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m401\u001b[39m\n    Received: \u001b[31m500\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 77 |\u001b[39m       \u001b[36mawait\u001b[39m handler(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 78 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 79 |\u001b[39m       expect(res\u001b[33m.\u001b[39m_getStatusCode())\u001b[33m.\u001b[39mtoBe(\u001b[35m401\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 80 |\u001b[39m       expect(\u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(res\u001b[33m.\u001b[39m_getData()))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 81 |\u001b[39m         error\u001b[33m:\u001b[39m \u001b[32m'Unauthorized'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 82 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/integration/reports.test.ts\u001b[39m\u001b[0m\u001b[2m:79:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m/api/reports › POST /api/reports › should validate request body\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m400\u001b[39m\n    Received: \u001b[31m500\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 94 |\u001b[39m       \u001b[36mawait\u001b[39m handler(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 95 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 96 |\u001b[39m       expect(res\u001b[33m.\u001b[39m_getStatusCode())\u001b[33m.\u001b[39mtoBe(\u001b[35m400\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 97 |\u001b[39m       expect(\u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(res\u001b[33m.\u001b[39m_getData()))\u001b[33m.\u001b[39mtoMatchObject({\u001b[22m\n\u001b[2m     \u001b[90m 98 |\u001b[39m         error\u001b[33m:\u001b[39m \u001b[32m'Validation failed'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 99 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/integration/reports.test.ts\u001b[39m\u001b[0m\u001b[2m:96:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m/api/reports › POST /api/reports › should create a report successfully\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m500\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 166 |\u001b[39m       \u001b[36mawait\u001b[39m handler(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 167 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 168 |\u001b[39m       expect(res\u001b[33m.\u001b[39m_getStatusCode())\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 169 |\u001b[39m       \u001b[36mconst\u001b[39m responseData \u001b[33m=\u001b[39m \u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(res\u001b[33m.\u001b[39m_getData())\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 170 |\u001b[39m       expect(responseData)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'data'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 171 |\u001b[39m       expect(responseData\u001b[33m.\u001b[39mdata)\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'title'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/integration/reports.test.ts\u001b[39m\u001b[0m\u001b[2m:168:36)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1m/api/reports › Invalid methods › should return 405 for non-POST methods\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m405\u001b[39m\n    Received: \u001b[31m500\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 205 |\u001b[39m       \u001b[36mawait\u001b[39m handler(req\u001b[33m,\u001b[39m res)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 206 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 207 |\u001b[39m       expect(res\u001b[33m.\u001b[39m_getStatusCode())\u001b[33m.\u001b[39mtoBe(\u001b[35m405\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 208 |\u001b[39m       expect(\u001b[33mJSON\u001b[39m\u001b[33m.\u001b[39mparse(res\u001b[33m.\u001b[39m_getData()))\u001b[33m.\u001b[39mtoEqual({\u001b[22m\n\u001b[2m     \u001b[90m 209 |\u001b[39m         error\u001b[33m:\u001b[39m \u001b[32m'Method not allowed'\u001b[39m\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 210 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/integration/reports.test.ts\u001b[39m\u001b[0m\u001b[2m:207:36)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["/api/reports","POST /api/reports"],"duration":22,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m401\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/integration/reports.test.ts:79:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"/api/reports POST /api/reports should return 401 if not authenticated","status":"failed","title":"should return 401 if not authenticated"},{"ancestorTitles":["/api/reports","POST /api/reports"],"duration":6,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m400\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/integration/reports.test.ts:96:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"/api/reports POST /api/reports should validate request body","status":"failed","title":"should validate request body"},{"ancestorTitles":["/api/reports","POST /api/reports"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/integration/reports.test.ts:168:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"/api/reports POST /api/reports should create a report successfully","status":"failed","title":"should create a report successfully"},{"ancestorTitles":["/api/reports","POST /api/reports"],"duration":2,"failureMessages":[],"fullName":"/api/reports POST /api/reports should handle internal errors","status":"passed","title":"should handle internal errors"},{"ancestorTitles":["/api/reports","Invalid methods"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m405\u001b[39m\nReceived: \u001b[31m500\u001b[39m\n    at Object.<anonymous> (/Users/nikita.gorshkov/competitor-research-agent/src/__tests__/integration/reports.test.ts:207:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"/api/reports Invalid methods should return 405 for non-POST methods","status":"failed","title":"should return 405 for non-POST methods"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":["src/**/*.{ts,tsx}","!src/**/*.d.ts","!src/**/*.stories.{ts,tsx}","!src/types/**/*","!src/__tests__/**/*","!src/**/index.ts"],"coverageDirectory":"/Users/nikita.gorshkov/competitor-research-agent/coverage","coverageProvider":"babel","coverageReporters":["text","lcov","html","json-summary"],"coverageThreshold":{"global":{"branches":70,"functions":70,"lines":70,"statements":70},"./src/lib/":{"branches":80,"functions":80,"lines":80,"statements":80},"./src/services/":{"branches":75,"functions":75,"lines":75,"statements":75}},"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"globalSetup":"/Users/nikita.gorshkov/competitor-research-agent/jest.global-setup.js","globalTeardown":"/Users/nikita.gorshkov/competitor-research-agent/jest.global-teardown.js","json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[{"displayName":"unit","testEnvironment":"node","testMatch":["<rootDir>/src/__tests__/unit/**/*.test.ts"],"setupFilesAfterEnv":["<rootDir>/jest.setup.js"],"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@/lib/(.*)$":"<rootDir>/src/lib/$1","^@/components/(.*)$":"<rootDir>/src/components/$1","^@/types/(.*)$":"<rootDir>/src/types/$1","^@/services/(.*)$":"<rootDir>/src/services/$1","^@/utils/(.*)$":"<rootDir>/src/utils/$1"},"transform":{"^.+\\.tsx?$":["ts-jest",{"tsconfig":"tsconfig.jest.json"}]},"rootDir":"/Users/nikita.gorshkov/competitor-research-agent"},{"displayName":"integration","testEnvironment":"node","testMatch":["<rootDir>/src/__tests__/integration/**/*.test.ts"],"setupFilesAfterEnv":["<rootDir>/jest.setup.js"],"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@/lib/(.*)$":"<rootDir>/src/lib/$1","^@/components/(.*)$":"<rootDir>/src/components/$1","^@/types/(.*)$":"<rootDir>/src/types/$1","^@/services/(.*)$":"<rootDir>/src/services/$1","^@/utils/(.*)$":"<rootDir>/src/utils/$1"},"transform":{"^.+\\.tsx?$":["ts-jest",{"tsconfig":"tsconfig.jest.json"}]},"rootDir":"/Users/nikita.gorshkov/competitor-research-agent"},{"displayName":"component","testEnvironment":"jsdom","testMatch":["<rootDir>/src/__tests__/components/**/*.test.tsx"],"setupFilesAfterEnv":["<rootDir>/jest.setup.js"],"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@/lib/(.*)$":"<rootDir>/src/lib/$1","^@/components/(.*)$":"<rootDir>/src/components/$1","^@/types/(.*)$":"<rootDir>/src/types/$1","^@/services/(.*)$":"<rootDir>/src/services/$1","^@/utils/(.*)$":"<rootDir>/src/utils/$1"},"transform":{"^.+\\.tsx?$":["ts-jest",{"tsconfig":"tsconfig.jest.json"}]},"rootDir":"/Users/nikita.gorshkov/competitor-research-agent"},{"displayName":"regression","testEnvironment":"node","testMatch":["<rootDir>/src/__tests__/regression/**/*.test.ts"],"setupFilesAfterEnv":["<rootDir>/jest.setup.js"],"testTimeout":60000,"moduleNameMapper":{"^@/(.*)$":"<rootDir>/src/$1","^@/lib/(.*)$":"<rootDir>/src/lib/$1","^@/components/(.*)$":"<rootDir>/src/components/$1","^@/types/(.*)$":"<rootDir>/src/types/$1","^@/services/(.*)$":"<rootDir>/src/services/$1","^@/utils/(.*)$":"<rootDir>/src/utils/$1"},"transform":{"^.+\\.tsx?$":["ts-jest",{"tsconfig":"tsconfig.jest.json"}]},"rootDir":"/Users/nikita.gorshkov/competitor-research-agent"}],"reporters":[["default",{}],["/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-html-reporters/index.js",{"publicPath":"./test-reports","filename":"regression-test-report.html","openReport":false}],["/Users/nikita.gorshkov/competitor-research-agent/node_modules/jest-junit/index.js",{"outputDirectory":"./test-reports","outputName":"junit.xml"}]],"rootDir":"/Users/nikita.gorshkov/competitor-research-agent","runTestsByPath":false,"seed":-1535396890,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/Users/nikita.gorshkov/competitor-research-agent/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"verbose":true,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1749149793111,"_reporterOptions":{"publicPath":"./test-reports","filename":"regression-test-report.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})